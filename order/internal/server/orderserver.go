// Code generated by goctl. DO NOT EDIT!
// Source: order.proto

package server

import (
	"context"

	"order/internal/logic"
	"order/internal/svc"
	"order/service/order"
)

type OrderServer struct {
	svcCtx *svc.ServiceContext
	order.UnimplementedOrderServer
}

func NewOrderServer(svcCtx *svc.ServiceContext) *OrderServer {
	return &OrderServer{
		svcCtx: svcCtx,
	}
}

func (s *OrderServer) CreateOrder(ctx context.Context, in *order.OrderModel) (*order.OrderModel, error) {
	l := logic.NewCreateOrderLogic(ctx, s.svcCtx)
	return l.CreateOrder(in)
}

func (s *OrderServer) CreateOrderRevert(ctx context.Context, in *order.OrderModel) (*order.OrderModel, error) {
	l := logic.NewCreateOrderRevertLogic(ctx, s.svcCtx)
	return l.CreateOrderRevert(in)
}

func (s *OrderServer) CreateOrderAndDeductAsync(ctx context.Context, in *order.OrderModel) (*order.OrderModel, error) {
	l := logic.NewCreateOrderAndDeductAsyncLogic(ctx, s.svcCtx)
	return l.CreateOrderAndDeductAsync(in)
}

func (s *OrderServer) UpdateOrder(ctx context.Context, in *order.OrderModel) (*order.BaseOrderResp, error) {
	l := logic.NewUpdateOrderLogic(ctx, s.svcCtx)
	return l.UpdateOrder(in)
}

func (s *OrderServer) GetOrder(ctx context.Context, in *order.OrderModel) (*order.OrderModel, error) {
	l := logic.NewGetOrderLogic(ctx, s.svcCtx)
	return l.GetOrder(in)
}

func (s *OrderServer) DeleteOrder(ctx context.Context, in *order.OrderModel) (*order.BaseOrderResp, error) {
	l := logic.NewDeleteOrderLogic(ctx, s.svcCtx)
	return l.DeleteOrder(in)
}

func (s *OrderServer) GetOrderList(ctx context.Context, in *order.OrderListReq) (*order.OrderListResp, error) {
	l := logic.NewGetOrderListLogic(ctx, s.svcCtx)
	return l.GetOrderList(in)
}
