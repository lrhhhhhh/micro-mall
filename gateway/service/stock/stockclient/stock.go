// Code generated by goctl. DO NOT EDIT!
// Source: stock.proto

package stockclient

import (
	"context"

	"gateway/service/stock"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateStockReq          = stock.CreateStockReq
	CreateStockResp         = stock.CreateStockResp
	DeductStockReq          = stock.DeductStockReq
	DeductStockResp         = stock.DeductStockResp
	GetStockReq             = stock.GetStockReq
	GetStockResp            = stock.GetStockResp
	GetStockResp_StockModel = stock.GetStockResp_StockModel
	UpdateStockReq          = stock.UpdateStockReq
	UpdateStockResp         = stock.UpdateStockResp

	Stock interface {
		CreateStock(ctx context.Context, in *CreateStockReq, opts ...grpc.CallOption) (*CreateStockResp, error)
		UpdateStock(ctx context.Context, in *UpdateStockReq, opts ...grpc.CallOption) (*UpdateStockResp, error)
		GetStock(ctx context.Context, in *GetStockReq, opts ...grpc.CallOption) (*GetStockResp, error)
		DeductStock(ctx context.Context, in *DeductStockReq, opts ...grpc.CallOption) (*DeductStockResp, error)
		DeductStockRevert(ctx context.Context, in *DeductStockReq, opts ...grpc.CallOption) (*DeductStockResp, error)
		DeductStockFast(ctx context.Context, in *DeductStockReq, opts ...grpc.CallOption) (*DeductStockResp, error)
		DeductStockFastRevert(ctx context.Context, in *DeductStockReq, opts ...grpc.CallOption) (*DeductStockResp, error)
	}

	defaultStock struct {
		cli zrpc.Client
	}
)

func NewStock(cli zrpc.Client) Stock {
	return &defaultStock{
		cli: cli,
	}
}

func (m *defaultStock) CreateStock(ctx context.Context, in *CreateStockReq, opts ...grpc.CallOption) (*CreateStockResp, error) {
	client := stock.NewStockClient(m.cli.Conn())
	return client.CreateStock(ctx, in, opts...)
}

func (m *defaultStock) UpdateStock(ctx context.Context, in *UpdateStockReq, opts ...grpc.CallOption) (*UpdateStockResp, error) {
	client := stock.NewStockClient(m.cli.Conn())
	return client.UpdateStock(ctx, in, opts...)
}

func (m *defaultStock) GetStock(ctx context.Context, in *GetStockReq, opts ...grpc.CallOption) (*GetStockResp, error) {
	client := stock.NewStockClient(m.cli.Conn())
	return client.GetStock(ctx, in, opts...)
}

func (m *defaultStock) DeductStock(ctx context.Context, in *DeductStockReq, opts ...grpc.CallOption) (*DeductStockResp, error) {
	client := stock.NewStockClient(m.cli.Conn())
	return client.DeductStock(ctx, in, opts...)
}

func (m *defaultStock) DeductStockRevert(ctx context.Context, in *DeductStockReq, opts ...grpc.CallOption) (*DeductStockResp, error) {
	client := stock.NewStockClient(m.cli.Conn())
	return client.DeductStockRevert(ctx, in, opts...)
}

func (m *defaultStock) DeductStockFast(ctx context.Context, in *DeductStockReq, opts ...grpc.CallOption) (*DeductStockResp, error) {
	client := stock.NewStockClient(m.cli.Conn())
	return client.DeductStockFast(ctx, in, opts...)
}

func (m *defaultStock) DeductStockFastRevert(ctx context.Context, in *DeductStockReq, opts ...grpc.CallOption) (*DeductStockResp, error) {
	client := stock.NewStockClient(m.cli.Conn())
	return client.DeductStockFastRevert(ctx, in, opts...)
}
