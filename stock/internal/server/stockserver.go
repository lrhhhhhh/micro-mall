// Code generated by goctl. DO NOT EDIT!
// Source: stock.proto

package server

import (
	"context"

	"stock/internal/logic"
	"stock/internal/svc"
	"stock/service/stock"
)

type StockServer struct {
	svcCtx *svc.ServiceContext
	stock.UnimplementedStockServer
}

func NewStockServer(svcCtx *svc.ServiceContext) *StockServer {
	return &StockServer{
		svcCtx: svcCtx,
	}
}

func (s *StockServer) CreateStock(ctx context.Context, in *stock.CreateStockReq) (*stock.CreateStockResp, error) {
	l := logic.NewCreateStockLogic(ctx, s.svcCtx)
	return l.CreateStock(in)
}

func (s *StockServer) UpdateStock(ctx context.Context, in *stock.UpdateStockReq) (*stock.UpdateStockResp, error) {
	l := logic.NewUpdateStockLogic(ctx, s.svcCtx)
	return l.UpdateStock(in)
}

func (s *StockServer) GetStock(ctx context.Context, in *stock.GetStockReq) (*stock.GetStockResp, error) {
	l := logic.NewGetStockLogic(ctx, s.svcCtx)
	return l.GetStock(in)
}

func (s *StockServer) RedisQueryPrepare(ctx context.Context, in *stock.DeductStockReq) (*stock.DeductStockResp, error) {
	l := logic.NewRedisQueryPrepareLogic(ctx, s.svcCtx)
	return l.RedisQueryPrepare(in)
}

func (s *StockServer) DeductStock(ctx context.Context, in *stock.DeductStockReq) (*stock.DeductStockResp, error) {
	l := logic.NewDeductStockLogic(ctx, s.svcCtx)
	return l.DeductStock(in)
}

func (s *StockServer) DeductStockRevert(ctx context.Context, in *stock.DeductStockReq) (*stock.DeductStockResp, error) {
	l := logic.NewDeductStockRevertLogic(ctx, s.svcCtx)
	return l.DeductStockRevert(in)
}

func (s *StockServer) DeductStockFast(ctx context.Context, in *stock.DeductStockReq) (*stock.DeductStockResp, error) {
	l := logic.NewDeductStockFastLogic(ctx, s.svcCtx)
	return l.DeductStockFast(in)
}
